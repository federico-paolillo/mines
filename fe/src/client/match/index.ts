/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { serializeNewGameDto, type NewGameDto } from '../models/req/index.js';
// @ts-ignore
import { createMatchstateDtoFromDiscriminatorValue, serializeMatchstateDto, type MatchstateDto } from '../models/res/index.js';
// @ts-ignore
import { type WithMatchItemRequestBuilder, WithMatchItemRequestBuilderNavigationMetadata, WithMatchItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /match
 */
export interface MatchRequestBuilder extends BaseRequestBuilder<MatchRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.match.item collection
     * @param matchId Match identifier
     * @returns {WithMatchItemRequestBuilder}
     */
     byMatchId(matchId: string) : WithMatchItemRequestBuilder;
    /**
     * Starts a new Match that will last roughly 2h
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MatchstateDto>}
     */
     post(body: NewGameDto, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<MatchstateDto | undefined>;
    /**
     * Starts a new Match that will last roughly 2h
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: NewGameDto, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const MatchRequestBuilderUriTemplate = "{+baseurl}/match";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MatchRequestBuilderNavigationMetadata: Record<Exclude<keyof MatchRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byMatchId: {
        requestsMetadata: WithMatchItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithMatchItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["matchId"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MatchRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: MatchRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createMatchstateDtoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeNewGameDto,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
